data_source:
  data_folders: data
  training_data_folder:
    folder: training
    train: train.csv
    test: test.csv
  prepared:
    folder: prepared
    clean_train: clean_train.csv

featurize:

  ktarget_enc:
    n_fold: 15
    random_seed: 2023
    targetcol: 'ACTION'
    columns: []

  random_catagory_encode:
    random_seed: 2023
    targetcol: 'ACTION'
    columns: [
              'RESOURCE_ROLE_ROLLUP_2', 
              'ROLE_DEPTNAME_ROLE_FAMILY_DESC',
              'ROLE_FAMILY', 
              'RESOURCE_ROLE_CODE',
              'RESOURCE', 
              'ROLE_DEPTNAME', 
              'ROLE_ROLLUP_2_ROLE_FAMILY',
              'ROLE_FAMILY_ROLE_CODE', 
              'ROLE_CODE', 
              'ROLE_ROLLUP_1',
              'ROLE_ROLLUP_1_ROLE_ROLLUP_2', 
              'ROLE_DEPTNAME_ROLE_CODE',
              'RESOURCE_ROLE_FAMILY', 
              'ROLE_ROLLUP_1_ROLE_FAMILY',
              'RESOURCE_ROLE_FAMILY_DESC', 
              'ROLE_ROLLUP_1_ROLE_DEPTNAME',
              'ROLE_ROLLUP_2_ROLE_DEPTNAME', 
              'ROLE_ROLLUP_2',
              'RESOURCE_ROLE_DEPTNAME',
             ]
             
  fequency_encode:
      columns: 
              [
              'ROLE_DEPTNAME_ROLE_FAMILY_DESC',
              'ROLE_ROLLUP_2_ROLE_FAMILY_DESC',
              'ROLE_ROLLUP_1_ROLE_FAMILY_DESC',
              'ROLE_FAMILY_DESC_ROLE_CODE',
              'ROLE_DEPTNAME_ROLE_CODE',
              'ROLE_FAMILY_DESC_ROLE_FAMILY',              
              'ROLE_ROLLUP_2_ROLE_CODE',
              'ROLE_DEPTNAME_ROLE_FAMILY',
              'ROLE_ROLLUP_1_ROLE_CODE',
              'ROLE_ROLLUP_2_ROLE_DEPTNAME',
              'ROLE_ROLLUP_1_ROLE_DEPTNAME',
              'ROLE_ROLLUP_2_ROLE_FAMILY',
              'ROLE_ROLLUP_1_ROLE_FAMILY',
              'ROLE_ROLLUP_1_ROLE_ROLLUP_2',
              'ROLE_FAMILY_ROLE_CODE',
              'ROLE_DEPTNAME',
              'ROLE_FAMILY_DESC',
              'ROLE_CODE',
              'ROLE_ROLLUP_2',
              'ROLE_ROLLUP_1',
              'ROLE_FAMILY',
              'RESOURCE',
              ]
  
  tfidf:
    random_seed: 2023
    dim_reduction: 1
    var_explained: 0.2
    targetcol: 'ACTION'
    combine_columns_required: False
    columns:
            [
              'ROLE_DEPTNAME',
              'ROLE_FAMILY_DESC',
              'ROLE_CODE',
              'ROLE_ROLLUP_2',
              'ROLE_ROLLUP_1',
              'ROLE_FAMILY',
              'RESOURCE',
              'ROLE_ROLLUP_1_ROLE_ROLLUP_2', 
              'ROLE_FAMILY_ROLE_CODE' ,
              'ROLE_ROLLUP_1_ROLE_FAMILY',
              'ROLE_ROLLUP_2_ROLE_FAMILY',
              'ROLE_ROLLUP_1_ROLE_DEPTNAME',
              'ROLE_ROLLUP_2_ROLE_DEPTNAME',
              'ROLE_ROLLUP_1_ROLE_CODE',
              'ROLE_DEPTNAME_ROLE_FAMILY',
              'ROLE_ROLLUP_2_ROLE_CODE'
            ]
    output:
      folder: feature\tfidf
      filename: tfidf.parquet

  count_vector:
    random_seed: 2023
    dim_reduction: 1
    var_explained: 0.9
    targetcol: 'ACTION'
    combine_columns_required: False
    
    columns:
            [
              'ROLE_DEPTNAME',
              'ROLE_FAMILY_DESC',
              'ROLE_CODE',
              'ROLE_ROLLUP_2',
              'ROLE_ROLLUP_1',
              'ROLE_FAMILY',
              'RESOURCE',
              'ROLE_ROLLUP_1_ROLE_ROLLUP_2', 
              'ROLE_FAMILY_ROLE_CODE' ,
              'ROLE_ROLLUP_1_ROLE_FAMILY',
              'ROLE_ROLLUP_2_ROLE_FAMILY',
              'ROLE_ROLLUP_1_ROLE_DEPTNAME',
              'ROLE_ROLLUP_2_ROLE_DEPTNAME',
              'ROLE_ROLLUP_1_ROLE_CODE',
              'ROLE_DEPTNAME_ROLE_FAMILY',
              'ROLE_ROLLUP_2_ROLE_CODE'
            ]
    output:
      folder: feature\cntvector
      filename: count_vectorizer.parquet

train_test_split:
  test_size: 0.01
  random_seed: 45
  cv: 5
  train_data: feature\train_data.parquet

model:
  model_type: xgboost

  logistic_reg:

    pipeline_type:
      KFoldTE: true
      frequency_encoding: false
      KFold_frequency_encoding: false
      tfidf_vectorizer_encoding: true
      count_vectorizer_encoding: false

    hyper_params:
      random_state: 42
      max_iter: 100
      penalty: l2
      solver: 'liblinear'
      #C: 10000
      #class_weight: balanced

    trained_model: model\logistic_reg\model.pkl
    eval_metrics: model\logistic_reg\metrics
    eval_plots: model\logistic_reg\plots

  decision_tree:

    pipeline_type:
      KFoldTE: false
      frequency_encoding: true
      KFold_frequency_encoding: true
      tfidf_vectorizer_encoding: false
      count_vectorizer_encoding: true

    hyper_params:
      random_state: 42
      max_depth: 14
      splitter: best
      min_samples_leaf: 0.001
      max_features: 0.3
      #min_samples_split: 0.01
      class_weight: balanced

    trained_model: model\decision_tree\model.pkl
    eval_metrics: model\decision_tree\metrics
    eval_plots: model\decision_tree\plots

  extra_decision_tree:

    pipeline_type:
      KFoldTE: true
      frequency_encoding: false
      KFold_frequency_encoding: false
      tfidf_vectorizer_encoding: true
      count_vectorizer_encoding: false

    hyper_params:
      random_state: 56
      n_estimators: 55
      max_depth: 4

      bootstrap: true
      max_samples: 0.75  #Max sample to consider for bootstrap
      max_features: 0.7
      min_samples_leaf: 0.5

      class_weight: balanced #balanced

    trained_model: model\extra_decision_tree\model.pkl
    eval_metrics: model\extra_decision_tree\metrics
    eval_plots: model\extra_decision_tree\plots

  random_forest:

    pipeline_type:
      KFoldTE: false
      frequency_encoding: true
      KFold_frequency_encoding: false
      tfidf_vectorizer_encoding: true
      count_vectorizer_encoding: false

    hyper_params:
      random_state: 42
      n_estimators: 220
      max_depth: 5

      bootstrap: true
      max_samples: 0.5  #Max sample to consider for bootstrap
      max_features: 0.5
      min_samples_leaf: 0.005

      class_weight: balanced           #balanced
    trained_model: model\random_forest\model.pkl
    eval_metrics: model\random_forest\metrics
    eval_plots: model\random_forest\plots

  xgboost:

    pipeline_type:
      KFoldTE: true
      frequency_encoding: true
      KFold_frequency_encoding: false
      tfidf_vectorizer_encoding: false
      count_vectorizer_encoding: true

    hyper_params:
      n_estimators: 100
      reg_lambda: 1.12
      max_depth: 4
      learning_rate: 0.01
      random_state: 100
      colsample_bytree: 0.6

    trained_model: model\xgboost\model.pkl
    eval_metrics: model\xgboost\metrics
    eval_plots: model\xgboost\plots

trained_model:
  model_path: model\model.pkl
  feature_eng: model\feature_engg_pipeline.json

  params:
    max_depth: 14
    splitter: best
    min_samples_leaf: 0.001
    max_features: 0.3
    #min_samples_split: 0.01
    class_weight: balanced

  pipeline_type:
    KFoldTE: true
    frequency_encoding: false
    KFold_frequency_encoding: false
    tfidf_vectorizer_encoding: false
    count_vectorizer_encoding: true


